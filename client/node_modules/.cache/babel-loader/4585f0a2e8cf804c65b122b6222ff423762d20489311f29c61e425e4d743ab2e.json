{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, withModifiers as _withModifiers, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, Fragment as _Fragment } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"h2\", {\n  class: \"text-center mb-4\"\n}, \"Register\", -1 /* HOISTED */);\nconst _hoisted_2 = {\n  class: \"row justify-content-center\"\n};\nconst _hoisted_3 = {\n  class: \"col-md-6\"\n};\nconst _hoisted_4 = {\n  class: \"mb-3\"\n};\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"email\",\n  class: \"form-label\"\n}, \"Email address\", -1 /* HOISTED */);\nconst _hoisted_6 = {\n  class: \"mb-3\"\n};\nconst _hoisted_7 = /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"emailVerify\",\n  class: \"form-label\"\n}, \"Verify Email address\", -1 /* HOISTED */);\nconst _hoisted_8 = {\n  class: \"mb-3\"\n};\nconst _hoisted_9 = /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"password\",\n  class: \"form-label\"\n}, \"Password\", -1 /* HOISTED */);\nconst _hoisted_10 = {\n  class: \"mb-3\"\n};\nconst _hoisted_11 = /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"passwordVerify\",\n  class: \"form-label\"\n}, \"Verify Password\", -1 /* HOISTED */);\nconst _hoisted_12 = {\n  class: \"d-grid\"\n};\nconst _hoisted_13 = /*#__PURE__*/_createElementVNode(\"button\", {\n  type: \"submit\",\n  class: \"btn btn-primary\"\n}, \"Register\", -1 /* HOISTED */);\nconst _hoisted_14 = {\n  key: 0,\n  class: \"text-danger\"\n};\nconst _hoisted_15 = {\n  key: 1,\n  class: \"text-success\"\n};\nconst _hoisted_16 = {\n  class: \"text-center mt-3\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_router_link = _resolveComponent(\"router-link\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_hoisted_1, _createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"form\", {\n    onSubmit: _cache[4] || (_cache[4] = _withModifiers((...args) => $options.submitForm && $options.submitForm(...args), [\"prevent\"]))\n  }, [_createElementVNode(\"div\", _hoisted_4, [_hoisted_5, _withDirectives(_createElementVNode(\"input\", {\n    type: \"email\",\n    class: \"form-control\",\n    id: \"email\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.userLog.email = $event),\n    placeholder: \"name@example.com\",\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.userLog.email]])]), _createElementVNode(\"div\", _hoisted_6, [_hoisted_7, _withDirectives(_createElementVNode(\"input\", {\n    type: \"email\",\n    class: \"form-control\",\n    id: \"emailVerify\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.emailVerify = $event),\n    placeholder: \"name@example.com\",\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.emailVerify]])]), _createElementVNode(\"div\", _hoisted_8, [_hoisted_9, _withDirectives(_createElementVNode(\"input\", {\n    type: \"password\",\n    class: \"form-control\",\n    id: \"password\",\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.userLog.password = $event),\n    placeholder: \"enter your password\",\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.userLog.password]])]), _createElementVNode(\"div\", _hoisted_10, [_hoisted_11, _withDirectives(_createElementVNode(\"input\", {\n    type: \"password\",\n    class: \"form-control\",\n    id: \"passwordVerify\",\n    \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $data.passwordVerify = $event),\n    placeholder: \"enter your password\",\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.passwordVerify]])]), _createElementVNode(\"div\", _hoisted_12, [_hoisted_13, $data.errorOccurs ? (_openBlock(), _createElementBlock(\"div\", _hoisted_14, _toDisplayString($data.errorMessage), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true), $data.success ? (_openBlock(), _createElementBlock(\"div\", _hoisted_15, \"Your account has been created. You can login.\")) : _createCommentVNode(\"v-if\", true)])], 32 /* HYDRATE_EVENTS */), _createElementVNode(\"div\", _hoisted_16, [_createElementVNode(\"p\", null, [_createTextVNode(\"Already have an account? \"), _createVNode(_component_router_link, {\n    to: \"/login\"\n  }, {\n    default: _withCtx(() => [_createTextVNode(\"Login here\")]),\n    _: 1 /* STABLE */\n  })])])])])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["_createElementVNode","class","for","type","_hoisted_1","_hoisted_2","_hoisted_3","onSubmit","_cache","_withModifiers","args","$options","submitForm","_hoisted_4","_hoisted_5","id","$data","userLog","email","$event","placeholder","required","_hoisted_6","_hoisted_7","emailVerify","_hoisted_8","_hoisted_9","password","_hoisted_10","_hoisted_11","passwordVerify","_hoisted_12","_hoisted_13","errorOccurs","_createElementBlock","_hoisted_14","_toDisplayString","errorMessage","success","_hoisted_15","_hoisted_16","_createVNode","_component_router_link","to"],"sources":["C:\\Users\\natha\\Desktop\\todo_gpt\\client\\src\\views\\RegisterPage.vue"],"sourcesContent":["<template>\r\n  <h2 class=\"text-center mb-4\">Register</h2>\r\n  <div class=\"row justify-content-center\">\r\n    <div class=\"col-md-6\">\r\n      <form @submit.prevent=\"submitForm\">\r\n        <div class=\"mb-3\">\r\n          <label for=\"email\" class=\"form-label\">Email address</label>\r\n          <input type=\"email\" class=\"form-control\" id=\"email\" v-model=\"userLog.email\" placeholder=\"name@example.com\" required>\r\n        </div>\r\n        <div class=\"mb-3\">\r\n          <label for=\"emailVerify\" class=\"form-label\" >Verify Email address</label>\r\n          <input type=\"email\" class=\"form-control\" id=\"emailVerify\" v-model=\"emailVerify\" placeholder=\"name@example.com\" required>\r\n        </div>\r\n        <div class=\"mb-3\">\r\n          <label for=\"password\" class=\"form-label\">Password</label>\r\n          <input type=\"password\" class=\"form-control\" id=\"password\" v-model=\"userLog.password\" placeholder=\"enter your password\" required>\r\n        </div>\r\n        <div class=\"mb-3\">\r\n          <label for=\"passwordVerify\" class=\"form-label\">Verify Password</label>\r\n          <input type=\"password\" class=\"form-control\" id=\"passwordVerify\" v-model=\"passwordVerify\" placeholder=\"enter your password\" required>\r\n        </div>\r\n        <div class=\"d-grid\">\r\n          <button type=\"submit\" class=\"btn btn-primary\">Register</button>\r\n          <div v-if=\"errorOccurs\" class=\"text-danger\">{{ errorMessage }}</div>\r\n          <div v-if=\"success\" class=\"text-success\">Your account has been created. You can login.</div>\r\n        </div>\r\n      </form>\r\n      <div class=\"text-center mt-3\">\r\n        <p>Already have an account? <router-link to=\"/login\">Login here</router-link></p>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport UserDataService from '@/services/UserDataService'\r\n\r\nexport default {\r\n  name: 'RegisterPage',\r\n  props: ['user', 'todolists', 'tasks'],\r\n  data () {\r\n    return {\r\n      userLog: {\r\n        email: '',\r\n        password: ''\r\n      },\r\n      emailVerify: '',\r\n      passwordVerify: '',\r\n      errorOccurs: false,\r\n      errorMessage: '',\r\n      success: false\r\n    }\r\n  },\r\n  methods: {\r\n    submitForm () {\r\n      this.success = false\r\n      if (this.userLog.email !== this.emailVerify) {\r\n        this.errorOccurs = true\r\n        this.errorMessage = 'Emails must be similar'\r\n        return\r\n      }\r\n      if (this.userLog.password !== this.passwordVerify) {\r\n        this.errorOccurs = true\r\n        this.errorMessage = 'Passwords must be similar'\r\n        return\r\n      }\r\n\r\n      UserDataService.create(this.userLog).then(response => {\r\n        this.success = true\r\n        this.errorOccurs = false\r\n      }).catch(error => {\r\n        if (error.response && error.response.data) {\r\n          this.errorMessage = error.response.data.message\r\n        } else {\r\n          this.errorMessage = 'An error occurred while processing the request.'\r\n        }\r\n        this.errorOccurs = true\r\n      })\r\n    }\r\n  },\r\n  created () {\r\n    document.title = 'Todo GPT - Register'\r\n  }\r\n}\r\n</script>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}