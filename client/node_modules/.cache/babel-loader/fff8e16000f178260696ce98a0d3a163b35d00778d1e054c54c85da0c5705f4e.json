{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, resolveComponent as _resolveComponent, createVNode as _createVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  key: 0,\n  class: \"container mt-5\"\n};\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"h1\", {\n  class: \"text-center mb-4\"\n}, \"Todo GPT - AI based Todo List application !\", -1 /* HOISTED */);\nconst _hoisted_3 = {\n  class: \"row justify-content-center\"\n};\nconst _hoisted_4 = {\n  class: \"col-md-6\"\n};\nconst _hoisted_5 = {\n  class: \"text-center\"\n};\nconst _hoisted_6 = {\n  class: \"text-center\"\n};\nconst _hoisted_7 = {\n  class: \"text-center\"\n};\nconst _hoisted_8 = {\n  class: \"d-grid gap-3\"\n};\nconst _hoisted_9 = {\n  key: 1\n};\nexport function render(_ctx, _cache) {\n  const _component_ToDoListCreatorComponent = _resolveComponent(\"ToDoListCreatorComponent\");\n  const _component_TodoListComponent = _resolveComponent(\"TodoListComponent\");\n  return _ctx.user ? (_openBlock(), _createElementBlock(\"main\", _hoisted_1, [_createElementVNode(\"section\", null, [_hoisted_2, _createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"p\", _hoisted_5, \"Logged as \" + _toDisplayString(_ctx.user.email), 1 /* TEXT */), _createElementVNode(\"p\", _hoisted_6, \"Todolists -> \" + _toDisplayString(_ctx.todolists), 1 /* TEXT */), _createElementVNode(\"p\", _hoisted_7, \"Tasks -> \" + _toDisplayString(_ctx.tasks), 1 /* TEXT */)])])]), _createElementVNode(\"section\", null, [_createElementVNode(\"div\", _hoisted_8, [_createVNode(_component_ToDoListCreatorComponent, {\n    onCreateToDoList: _ctx.createTodolist\n  }, null, 8 /* PROPS */, [\"onCreateToDoList\"]), _createElementVNode(\"div\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.todolists, todolist => {\n    return _openBlock(), _createBlock(_component_TodoListComponent, {\n      key: todolist.idTodolist,\n      id: todolist.idTodolist,\n      todolists: _ctx.todolists,\n      isEditing: false,\n      showTasks: false,\n      user: _ctx.user,\n      tasks: _ctx.tasks,\n      onRemoveToDoList: _ctx.deleteTodolist,\n      onUpdateToDoList: _ctx.updateTodolist,\n      onCreateTask: _ctx.createTask,\n      onDeleteTask: _ctx.deleteTask,\n      onUpdateTask: _ctx.updateTask\n    }, null, 8 /* PROPS */, [\"id\", \"todolists\", \"user\", \"tasks\", \"onRemoveToDoList\", \"onUpdateToDoList\", \"onCreateTask\", \"onDeleteTask\", \"onUpdateTask\"]);\n  }), 128 /* KEYED_FRAGMENT */))])])])])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_9, _toDisplayString(this.$router.push({\n    name: 'login'\n  })), 1 /* TEXT */));\n}","map":{"version":3,"names":["class","_createElementVNode","_ctx","user","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","_toDisplayString","email","_hoisted_6","todolists","_hoisted_7","tasks","_hoisted_8","_createVNode","_component_ToDoListCreatorComponent","onCreateToDoList","createTodolist","_Fragment","_renderList","todolist","_createBlock","_component_TodoListComponent","key","idTodolist","id","isEditing","showTasks","onRemoveToDoList","deleteTodolist","onUpdateToDoList","updateTodolist","onCreateTask","createTask","onDeleteTask","deleteTask","onUpdateTask","updateTask","_hoisted_9","$router","push","name"],"sources":["C:\\Users\\natha\\Desktop\\todo_gpt\\client\\src\\views\\HomePage.vue"],"sourcesContent":["<template>\r\n  <main v-if=\"user\" class=\"container mt-5\">\r\n    <section>\r\n      <h1 class=\"text-center mb-4\">Todo GPT - AI based Todo List application !</h1>\r\n      <div class=\"row justify-content-center\">\r\n        <div class=\"col-md-6\">\r\n          <p class=\"text-center\">Logged as {{ user.email }}</p>\r\n          <p class=\"text-center\">Todolists -> {{ todolists }}</p>\r\n          <p class=\"text-center\">Tasks -> {{ tasks }}</p>\r\n        </div>\r\n      </div>\r\n    </section>\r\n    <section>\r\n      <div class=\"d-grid gap-3\">\r\n        <ToDoListCreatorComponent v-on:create-to-do-list=\"createTodolist\"/>\r\n        <div>\r\n          <TodoListComponent v-for=\"(todolist) in todolists\"\r\n                             :key=\"todolist.idTodolist\"\r\n                             :id=\"todolist.idTodolist\"\r\n                             :todolists=\"todolists\"\r\n                             :isEditing=\"false\"\r\n                             :showTasks=\"false\"\r\n                             :user=\"user\"\r\n                             :tasks=\"tasks\"\r\n                             v-on:remove-to-do-list=\"deleteTodolist\"\r\n                             v-on:update-to-do-list=\"updateTodolist\"\r\n                             v-on:create-task=\"createTask\"\r\n                             v-on:delete-task=\"deleteTask\"\r\n                             v-on:update-task=\"updateTask\"/>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  </main>\r\n  <div v-else>{{ this.$router.push({ name: 'login' }) }}</div>\r\n</template>\r\n\r\n<script>\r\nimport TodoListComponent from '@/components/TodoListComponent.vue'\r\nimport TodolistDataService from '@/services/TodolistDataService'\r\nimport ToDoListCreatorComponent from '@/components/ToDoListCreatorComponent'\r\nimport TaskDataService from '@/services/TaskDataService'\r\n\r\nexport default {\r\n  components: { ToDoListCreatorComponent, TodoListComponent },\r\n  name: 'HomePage',\r\n  props: ['user', 'todolists', 'tasks'],\r\n  methods: {\r\n    deleteTodolist (id) {\r\n      TodolistDataService.delete(id).then(response => {\r\n        TodolistDataService.getAllOfUser(this.user.idUser).then(response => {\r\n          this.$store.dispatch('todolists', response.data.todolists)\r\n        })\r\n      })\r\n    },\r\n    updateTodolist (todolist) {\r\n      todolist.lastModifiedDate = new Date()\r\n      TodolistDataService.update(todolist.idTodolist, todolist).then(response => {\r\n        console.log(response)\r\n      })\r\n    },\r\n    createTodolist (todolist) {\r\n      todolist.idUser = this.user.idUser\r\n      TodolistDataService.create(todolist).then(response => {\r\n        TodolistDataService.getAllOfUser(this.user.idUser).then(response => {\r\n          this.$store.dispatch('todolists', response.data.todolists)\r\n        })\r\n        console.log(response)\r\n      })\r\n    },\r\n    createTask (task) {\r\n      TaskDataService.create(task).then(response => {\r\n        TaskDataService.getAllOfTodolist(task.idTodolist).then(response => {\r\n          this.$store.dispatch('tasks', {\r\n            tasks: response.data.tasks,\r\n            idTodolist: task.idTodolist\r\n          })\r\n        })\r\n      })\r\n    },\r\n    deleteTask (task) {\r\n      TaskDataService.delete(task.idTask).then(response => {\r\n        this.$store.dispatch('removeTask', task)\r\n      }\r\n\r\n      /* TaskDataService.delete(task.idTask).then(response => {\r\n        TodolistDataService.getAllOfUser(this.user.idUser).then(response => {\r\n          this.$store.dispatch('todolists', response.data.todolists)\r\n          for (const todolist of response.data.todolists) {\r\n            TaskDataService.getAllOfTodolist(todolist.idTodolist).then(response => {\r\n              this.$store.dispatch('tasks', {\r\n                tasks: response.data.tasks,\r\n                idTodolist: todolist.idTodolist\r\n              })\r\n            })\r\n          }\r\n        }) */\r\n        /*\r\n        TaskDataService.getAllOfTodolist(task.idTodolist).then(response => {\r\n          this.$store.dispatch('tasks', {\r\n            tasks: response.data.tasks,\r\n            idTodolist: task.idTodolist\r\n          })\r\n        }) */\r\n      })\r\n    },\r\n    updateTask (task) {\r\n      console.log('update 3')\r\n      TaskDataService.update(task.idTask, task).then(response => { console.log(response) })\r\n    }\r\n  }\r\n}\r\n</script>\r\n"],"mappings":";;;;EACoBA,KAAK,EAAC;;gCAEpBC,mBAAA,CAA6E;EAAzED,KAAK,EAAC;AAAkB,GAAC,6CAA2C;;EACnEA,KAAK,EAAC;AAA4B;;EAChCA,KAAK,EAAC;AAAU;;EAChBA,KAAK,EAAC;AAAa;;EACnBA,KAAK,EAAC;AAAa;;EACnBA,KAAK,EAAC;AAAa;;EAKrBA,KAAK,EAAC;AAAc;;;;;;;SAZjBE,IAAA,CAAAC,IAAI,I,cAAhBC,mBAAA,CA+BO,QA/BPC,UA+BO,GA9BLJ,mBAAA,CASU,kBARRK,UAA6E,EAC7EL,mBAAA,CAMM,OANNM,UAMM,GALJN,mBAAA,CAIM,OAJNO,UAIM,GAHJP,mBAAA,CAAqD,KAArDQ,UAAqD,EAA9B,YAAU,GAAAC,gBAAA,CAAGR,IAAA,CAAAC,IAAI,CAACQ,KAAK,kBAC9CV,mBAAA,CAAuD,KAAvDW,UAAuD,EAAhC,eAAa,GAAAF,gBAAA,CAAGR,IAAA,CAAAW,SAAS,kBAChDZ,mBAAA,CAA+C,KAA/Ca,UAA+C,EAAxB,WAAS,GAAAJ,gBAAA,CAAGR,IAAA,CAAAa,KAAK,iB,OAI9Cd,mBAAA,CAmBU,kBAlBRA,mBAAA,CAiBM,OAjBNe,UAiBM,GAhBJC,YAAA,CAAmEC,mCAAA;IAApCC,gBAAiB,EAAEjB,IAAA,CAAAkB;EAAc,+CAChEnB,mBAAA,CAcM,e,kBAbJG,mBAAA,CAYkDiB,SAAA,QAAAC,WAAA,CAZVpB,IAAA,CAAAW,SAAS,EAAtBU,QAAQ;yBAAnCC,YAAA,CAYkDC,4BAAA;MAX9BC,GAAG,EAAEH,QAAQ,CAACI,UAAU;MACxBC,EAAE,EAAEL,QAAQ,CAACI,UAAU;MACvBd,SAAS,EAAEX,IAAA,CAAAW,SAAS;MACpBgB,SAAS,EAAE,KAAK;MAChBC,SAAS,EAAE,KAAK;MAChB3B,IAAI,EAAED,IAAA,CAAAC,IAAI;MACVY,KAAK,EAAEb,IAAA,CAAAa,KAAK;MACRgB,gBAAiB,EAAE7B,IAAA,CAAA8B,cAAc;MACjCC,gBAAiB,EAAE/B,IAAA,CAAAgC,cAAc;MACjCC,YAAW,EAAEjC,IAAA,CAAAkC,UAAU;MACvBC,YAAW,EAAEnC,IAAA,CAAAoC,UAAU;MACvBC,YAAW,EAAErC,IAAA,CAAAsC;;2DAK7CpC,mBAAA,CAA4D,OAAAqC,UAAA,EAAA/B,gBAAA,MAAxCgC,OAAO,CAACC,IAAI;IAAAC,IAAA;EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}