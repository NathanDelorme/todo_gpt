{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport DefaultNavbarComponent from '@/components/DefaultNavbarComponent.vue';\nimport LoggedNavbarComponent from '@/components/LoggedNavbarComponent.vue';\nimport { mapGetters } from 'vuex';\nimport UserDataService from '@/services/UserDataService';\nimport FooterComponent from '@/components/FooterComponent.vue';\nimport router from '@/routers';\nexport default {\n  name: 'App',\n  components: {\n    FooterComponent,\n    LoggedNavbarComponent,\n    DefaultNavbarComponent\n  },\n  props: {},\n  data() {\n    return {\n      userData: {\n        id: -1,\n        email: null,\n        token: null\n      }\n    };\n  },\n  computed: {\n    ...mapGetters(['user'])\n  },\n  beforeMount(to, from, next) {\n    console.log(this.userData.token);\n    UserDataService.getAuth().then(response => {\n      this.$store.dispatch('user', response.data);\n      this.userData.id = response.data.idUser;\n      this.userData.email = response.data.email;\n      this.userData.token = response.data.token;\n      console.log(this.userData.token);\n      next();\n    }).catch(e => {\n      this.$store.dispatch('user', null);\n      router.push({\n        path: 'login'\n      });\n    });\n  },\n  created() {\n    UserDataService.getAuth().then(response => {\n      this.$store.dispatch('user', response.data);\n      this.userData.id = response.data.idUser;\n      this.userData.email = response.data.email;\n      this.userData.token = response.data.token;\n      sessionStorage.setItem('token', response.data.token);\n    }).catch(e => {\n      this.$store.dispatch('user', null);\n    });\n  }\n};","map":{"version":3,"names":["DefaultNavbarComponent","LoggedNavbarComponent","mapGetters","UserDataService","FooterComponent","router","name","components","props","data","userData","id","email","token","computed","beforeMount","to","from","next","console","log","getAuth","then","response","$store","dispatch","idUser","catch","e","push","path","created","sessionStorage","setItem"],"sources":["C:\\Users\\natha\\Desktop\\todo_gpt\\client\\src\\App.vue"],"sourcesContent":["<template>\n  <header>\n    <DefaultNavbarComponent v-if=\"$route.path === '/login' || $route.path === '/' || $route.path === '/register'\" />\n    <LoggedNavbarComponent v-else />\n  </header>\n  <main>\n    <div class=\"container-sm mt-3\">\n      <div class=\"card\">\n        <div class=\"card-body\">\n          <router-view></router-view>\n        </div>\n      </div>\n    </div>\n  </main>\n  <footer>\n    <FooterComponent />\n  </footer>\n</template>\n\n<script>\nimport DefaultNavbarComponent from '@/components/DefaultNavbarComponent.vue'\nimport LoggedNavbarComponent from '@/components/LoggedNavbarComponent.vue'\nimport { mapGetters } from 'vuex'\nimport UserDataService from '@/services/UserDataService'\nimport FooterComponent from '@/components/FooterComponent.vue'\nimport router from '@/routers'\n\nexport default {\n  name: 'App',\n  components: {\n    FooterComponent,\n    LoggedNavbarComponent,\n    DefaultNavbarComponent\n  },\n  props: {},\n  data () {\n    return {\n      userData: {\n        id: -1,\n        email: null,\n        token: null\n      }\n    }\n  },\n  computed: {\n    ...mapGetters(['user'])\n  },\n  beforeMount (to, from, next) {\n    console.log(this.userData.token)\n    UserDataService.getAuth()\n      .then(response => {\n        this.$store.dispatch('user', response.data)\n        this.userData.id = response.data.idUser\n        this.userData.email = response.data.email\n        this.userData.token = response.data.token\n        console.log(this.userData.token)\n        next()\n      })\n      .catch(e => {\n        this.$store.dispatch('user', null)\n        router.push({ path: 'login' })\n      })\n  } ,\n  created () {\n    UserDataService.getAuth()\n      .then(response => {\n        this.$store.dispatch('user', response.data)\n        this.userData.id = response.data.idUser\n        this.userData.email = response.data.email\n        this.userData.token = response.data.token\n        sessionStorage.setItem('token', response.data.token);\n      })\n      .catch(e => {\n        this.$store.dispatch('user', null)\n      })\n  }\n}\n</script>\n"],"mappings":";AAoBA,OAAOA,sBAAqB,MAAO,yCAAwC;AAC3E,OAAOC,qBAAoB,MAAO,wCAAuC;AACzE,SAASC,UAAS,QAAS,MAAK;AAChC,OAAOC,eAAc,MAAO,4BAA2B;AACvD,OAAOC,eAAc,MAAO,kCAAiC;AAC7D,OAAOC,MAAK,MAAO,WAAU;AAE7B,eAAe;EACbC,IAAI,EAAE,KAAK;EACXC,UAAU,EAAE;IACVH,eAAe;IACfH,qBAAqB;IACrBD;EACF,CAAC;EACDQ,KAAK,EAAE,CAAC,CAAC;EACTC,IAAGA,CAAA,EAAK;IACN,OAAO;MACLC,QAAQ,EAAE;QACRC,EAAE,EAAE,CAAC,CAAC;QACNC,KAAK,EAAE,IAAI;QACXC,KAAK,EAAE;MACT;IACF;EACF,CAAC;EACDC,QAAQ,EAAE;IACR,GAAGZ,UAAU,CAAC,CAAC,MAAM,CAAC;EACxB,CAAC;EACDa,WAAUA,CAAGC,EAAE,EAAEC,IAAI,EAAEC,IAAI,EAAE;IAC3BC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACV,QAAQ,CAACG,KAAK;IAC/BV,eAAe,CAACkB,OAAO,EAAC,CACrBC,IAAI,CAACC,QAAO,IAAK;MAChB,IAAI,CAACC,MAAM,CAACC,QAAQ,CAAC,MAAM,EAAEF,QAAQ,CAACd,IAAI;MAC1C,IAAI,CAACC,QAAQ,CAACC,EAAC,GAAIY,QAAQ,CAACd,IAAI,CAACiB,MAAK;MACtC,IAAI,CAAChB,QAAQ,CAACE,KAAI,GAAIW,QAAQ,CAACd,IAAI,CAACG,KAAI;MACxC,IAAI,CAACF,QAAQ,CAACG,KAAI,GAAIU,QAAQ,CAACd,IAAI,CAACI,KAAI;MACxCM,OAAO,CAACC,GAAG,CAAC,IAAI,CAACV,QAAQ,CAACG,KAAK;MAC/BK,IAAI,EAAC;IACP,CAAC,EACAS,KAAK,CAACC,CAAA,IAAK;MACV,IAAI,CAACJ,MAAM,CAACC,QAAQ,CAAC,MAAM,EAAE,IAAI;MACjCpB,MAAM,CAACwB,IAAI,CAAC;QAAEC,IAAI,EAAE;MAAQ,CAAC;IAC/B,CAAC;EACL;EACAC,OAAMA,CAAA,EAAK;IACT5B,eAAe,CAACkB,OAAO,EAAC,CACrBC,IAAI,CAACC,QAAO,IAAK;MAChB,IAAI,CAACC,MAAM,CAACC,QAAQ,CAAC,MAAM,EAAEF,QAAQ,CAACd,IAAI;MAC1C,IAAI,CAACC,QAAQ,CAACC,EAAC,GAAIY,QAAQ,CAACd,IAAI,CAACiB,MAAK;MACtC,IAAI,CAAChB,QAAQ,CAACE,KAAI,GAAIW,QAAQ,CAACd,IAAI,CAACG,KAAI;MACxC,IAAI,CAACF,QAAQ,CAACG,KAAI,GAAIU,QAAQ,CAACd,IAAI,CAACI,KAAI;MACxCmB,cAAc,CAACC,OAAO,CAAC,OAAO,EAAEV,QAAQ,CAACd,IAAI,CAACI,KAAK,CAAC;IACtD,CAAC,EACAc,KAAK,CAACC,CAAA,IAAK;MACV,IAAI,CAACJ,MAAM,CAACC,QAAQ,CAAC,MAAM,EAAE,IAAI;IACnC,CAAC;EACL;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}