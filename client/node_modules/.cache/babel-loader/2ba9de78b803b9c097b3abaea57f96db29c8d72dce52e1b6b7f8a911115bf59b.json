{"ast":null,"code":"import TaskComponent from '@/components/TaskComponent';\nimport TaskCreatorComponent from '@/components/TaskCreatorComponent';\n/* import TodolistDataService from '@/services/TodolistDataService'\r\nimport TaskDataService from \"@/services/TaskDataService\"; */\n\nexport default {\n  components: {\n    TaskCreatorComponent,\n    TaskComponent\n  },\n  props: ['user', 'todolists', 'tasks', 'id', 'isEditing', 'showTasks'],\n  emits: ['remove-to-do-list', 'update-to-do-list', 'create-task', 'delete-task', 'update-task'],\n  data() {\n    return {\n      todolist: this.todolists.find(item => item.idTodolist === this.id),\n      localIsEditing: this.isEditing,\n      localShowTasks: this.showTasks,\n      urgentPercent: 0,\n      importantPercent: 0,\n      notImportantPercent: 0\n    };\n  },\n  watch: {\n    tasks: {\n      deep: true,\n      handler() {\n        console.log(this.tasks);\n        this.urgentPercent = this.getTasksPourcentage(2);\n        this.importantPercent = this.getTasksPourcentage(1);\n        this.notImportantPercent = this.getTasksPourcentage(0);\n      }\n    }\n  },\n  created() {\n    this.urgentPercent = this.getTasksPourcentage(2);\n    this.importantPercent = this.getTasksPourcentage(1);\n    this.notImportantPercent = this.getTasksPourcentage(0);\n  },\n  methods: {\n    getTasksPourcentage(importance) {\n      if (this.tasks === null || this.tasks === undefined || this.tasks[this.id] === null || this.tasks[this.id] === undefined || this.tasks[this.id].length === 0) {\n        return 0;\n      }\n      /* TaskDataService.getAllOfTodolist(this.id)\r\n      TodolistDataService.getAllOfUser(this.user.idUser).then(response => {\r\n        this.$store.dispatch('todolists', response.data.todolists)\r\n      }) */\n      return this.tasks[this.id].filter(item => item.priority === importance && item.isFinished === true).length * 100 / this.tasks[this.id].length;\n    },\n    createTask(task) {\n      this.$emit('create-task', task);\n    },\n    deleteTask(task) {\n      this.$emit('delete-task', task);\n    },\n    updateTask(task) {\n      console.log('update 2');\n      this.$emit('update-task', task);\n    },\n    deleteTodolist() {\n      this.$emit('remove-to-do-list', this.id);\n    },\n    updateTodolist() {\n      this.$emit('update-to-do-list', this.todolist);\n    },\n    toggleEdit() {\n      this.localIsEditing = !this.localIsEditing;\n      if (!this.localIsEditing) {\n        this.updateTodolist();\n      }\n    },\n    toggleTasks() {\n      this.localShowTasks = !this.localShowTasks;\n    }\n  }\n};","map":{"version":3,"names":["TaskComponent","TaskCreatorComponent","components","props","emits","data","todolist","todolists","find","item","idTodolist","id","localIsEditing","isEditing","localShowTasks","showTasks","urgentPercent","importantPercent","notImportantPercent","watch","tasks","deep","handler","console","log","getTasksPourcentage","created","methods","importance","undefined","length","filter","priority","isFinished","createTask","task","$emit","deleteTask","updateTask","deleteTodolist","updateTodolist","toggleEdit","toggleTasks"],"sources":["C:\\Users\\natha\\Desktop\\todo_gpt\\client\\src\\components\\TodoListComponent.vue"],"sourcesContent":["<template>\r\n  <div class=\"mb-3\">\r\n    <div class=\"card text-center\">\r\n      <div class=\"card-header text-muted\">{{ todolist.lastModifiedDate }}</div>\r\n      <div class=\"card-body\">\r\n        <div>\r\n          <h5 class=\"card-title\" v-if=\"!localIsEditing\">{{ todolist.title }}</h5>\r\n          <input type=\"text\" class=\"form-control text-center\" v-if=\"localIsEditing\" v-model=\"todolist.title\">\r\n        </div>\r\n        <p>{{ tasks[this.id] }}</p>\r\n        <div>\r\n          <p class=\"card-text lh-base\" style=\"white-space: pre-line;\" v-if=\"!localIsEditing\">{{ todolist.description }}</p>\r\n          <textarea class=\"form-control text-center\" v-if=\"localIsEditing\" v-model=\"todolist.description\"></textarea>\r\n        </div>\r\n        <br>\r\n        <div class=\"progress\">\r\n\r\n          <div class=\"progress-bar\" role=\"progressbar\" :style=\"'width: ' + urgentPercent + '%; background-color: darkred'\"></div>\r\n          <div class=\"progress-bar\" role=\"progressbar\" :style=\"'width: ' + importantPercent + '%; background-color: darkorange'\"></div>\r\n          <div class=\"progress-bar\" role=\"progressbar\" :style=\"'width: ' + notImportantPercent + '%; background-color: forestgreen'\"></div>\r\n\r\n        </div>\r\n        <br>\r\n        <br>\r\n        <div class=\"btn-group\" role=\"group\">\r\n          <input type=\"checkbox\" class=\"btn-check\" :id=\"'toggleTasks' + todolist.idTodolist\"  autocomplete=\"off\" @click=\"toggleTasks\">\r\n          <label class=\"btn btn-primary\" :for=\"'toggleTasks' + todolist.idTodolist\">{{ localShowTasks ? 'Hide tasks' : 'Show tasks' }}</label><br>\r\n          <input type=\"checkbox\" class=\"btn-check\" :id=\"'toggleEditing' + todolist.idTodolist\" autocomplete=\"off\" @click=\"toggleEdit\">\r\n          <label class=\"btn btn-warning\" :for=\"'toggleEditing' + todolist.idTodolist\">{{ localIsEditing ? 'Save' : 'Modify' }}</label><br>\r\n          <button class=\"btn btn-danger\" @click.stop=\"deleteTodolist\">Delete</button>\r\n        </div>\r\n        <div v-if=\"localShowTasks\" class=\"text-start\">\r\n          <hr>\r\n          <div class=\"d-grid mb-3\">\r\n            <TaskCreatorComponent :tasks=\"tasks\" :todolistID=\"id\" v-on:create-task=\"createTask\"/>\r\n          </div>\r\n          <TaskComponent class=\"mb-3\"\r\n                         v-for=\"(task) in tasks[this.id]\"\r\n                         :key=\"task.idTask\"\r\n                         :id=\"task.idTask\"\r\n                         :tasks=\"tasks\"\r\n                         :user=\"user\"\r\n                         :todolists=\"todolists\"\r\n                         :todolistId=\"this.id\"\r\n                         :isEditing=\"false\"\r\n                         v-on:delete-task=\"deleteTask\" v-on:update-task=\"updateTask\"/>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport TaskComponent from '@/components/TaskComponent'\r\nimport TaskCreatorComponent from '@/components/TaskCreatorComponent'\r\n/* import TodolistDataService from '@/services/TodolistDataService'\r\nimport TaskDataService from \"@/services/TaskDataService\"; */\r\n\r\nexport default {\r\n  components: { TaskCreatorComponent, TaskComponent },\r\n  props: ['user', 'todolists', 'tasks', 'id', 'isEditing', 'showTasks'],\r\n  emits: ['remove-to-do-list', 'update-to-do-list', 'create-task', 'delete-task', 'update-task'],\r\n  data () {\r\n    return {\r\n      todolist: this.todolists.find(item => item.idTodolist === this.id),\r\n      localIsEditing: this.isEditing,\r\n      localShowTasks: this.showTasks,\r\n      urgentPercent: 0,\r\n      importantPercent: 0,\r\n      notImportantPercent: 0\r\n    }\r\n  },\r\n  watch: {\r\n    tasks: {\r\n      deep: true,\r\n      handler () {\r\n        console.log(this.tasks)\r\n        this.urgentPercent = this.getTasksPourcentage(2)\r\n        this.importantPercent = this.getTasksPourcentage(1)\r\n        this.notImportantPercent = this.getTasksPourcentage(0)\r\n      }\r\n    }\r\n  },\r\n  created () {\r\n    this.urgentPercent = this.getTasksPourcentage(2)\r\n    this.importantPercent = this.getTasksPourcentage(1)\r\n    this.notImportantPercent = this.getTasksPourcentage(0)\r\n  },\r\n  methods: {\r\n    getTasksPourcentage (importance) {\r\n      if (this.tasks === null || this.tasks === undefined || this.tasks[this.id] === null || this.tasks[this.id] === undefined || this.tasks[this.id].length === 0) {\r\n        return 0\r\n      }\r\n      /* TaskDataService.getAllOfTodolist(this.id)\r\n      TodolistDataService.getAllOfUser(this.user.idUser).then(response => {\r\n        this.$store.dispatch('todolists', response.data.todolists)\r\n      }) */\r\n      return this.tasks[this.id].filter(item => item.priority === importance && item.isFinished === true).length * 100 / this.tasks[this.id].length\r\n    },\r\n    createTask (task) {\r\n      this.$emit('create-task', task)\r\n    },\r\n    deleteTask (task) {\r\n      this.$emit('delete-task', task)\r\n    },\r\n    updateTask (task) {\r\n      console.log('update 2')\r\n      this.$emit('update-task', task)\r\n    },\r\n    deleteTodolist () {\r\n      this.$emit('remove-to-do-list', this.id)\r\n    },\r\n    updateTodolist () {\r\n      this.$emit('update-to-do-list', this.todolist)\r\n    },\r\n    toggleEdit () {\r\n      this.localIsEditing = !this.localIsEditing\r\n      if (!this.localIsEditing) {\r\n        this.updateTodolist()\r\n      }\r\n    },\r\n    toggleTasks () {\r\n      this.localShowTasks = !this.localShowTasks\r\n    }\r\n  }\r\n}\r\n</script>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}