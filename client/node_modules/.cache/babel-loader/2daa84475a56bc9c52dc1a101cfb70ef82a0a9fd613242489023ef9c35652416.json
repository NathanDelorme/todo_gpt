{"ast":null,"code":"import TodoListComponent from '@/components/TodoListComponent.vue';\nimport TodolistDataService from '@/services/TodolistDataService';\nimport ToDoListCreatorComponent from '@/components/ToDoListCreatorComponent';\nimport TaskDataService from '@/services/TaskDataService';\nexport default {\n  components: {\n    ToDoListCreatorComponent,\n    TodoListComponent\n  },\n  name: 'HomePage',\n  props: ['user', 'todolists', 'tasks'],\n  methods: {\n    deleteTodolist(id) {\n      TodolistDataService.delete(Number(id)).then(response => {\n        TodolistDataService.getAllOfUser(this.user.idUser).then(response => {\n          this.$store.dispatch('todolists', response.data.todolists);\n        });\n      });\n    },\n    updateTodolist(todolist) {\n      todolist.lastModifiedDate = new Date();\n      TodolistDataService.update(Number(todolist.idTodolist), todolist).then(response => {\n        console.log(response);\n      });\n    },\n    createTodolist(todolist) {\n      todolist.idUser = this.user.idUser;\n      TodolistDataService.create(todolist).then(response => {\n        TodolistDataService.getAllOfUser(this.user.idUser).then(response => {\n          this.$store.dispatch('todolists', response.data.todolists);\n        });\n        console.log(response);\n      });\n    },\n    createTask(task) {\n      TaskDataService.create(task).then(response => {\n        TaskDataService.getAllOfTodolist(task.idTodolist).then(response => {\n          this.$store.dispatch('tasks', {\n            tasks: response.data.tasks,\n            idTodolist: task.idTodolist\n          });\n        });\n      });\n    },\n    deleteTask(task) {\n      TaskDataService.delete(Number(task.idTask)).then(response => {\n        TaskDataService.getAllOfTodolist(task.idTodolist).then(response => {\n          this.$store.dispatch('tasks', {\n            tasks: response.data.tasks,\n            idTodolist: task.idTodolist\n          });\n        });\n      });\n    },\n    updateTask(task) {\n      TaskDataService.update({\n        id: Number(task.idTodolist),\n        task: task\n      }).then(response => {});\n    }\n  }\n};","map":{"version":3,"names":["TodoListComponent","TodolistDataService","ToDoListCreatorComponent","TaskDataService","components","name","props","methods","deleteTodolist","id","delete","Number","then","response","getAllOfUser","user","idUser","$store","dispatch","data","todolists","updateTodolist","todolist","lastModifiedDate","Date","update","idTodolist","console","log","createTodolist","create","createTask","task","getAllOfTodolist","tasks","deleteTask","idTask","updateTask"],"sources":["C:\\Users\\natha\\Desktop\\todo_gpt\\client\\src\\views\\HomePage.vue"],"sourcesContent":["<template>\r\n  <main v-if=\"user\" class=\"container mt-5\">\r\n    <section>\r\n      <h1 class=\"text-center mb-4\">Todo GPT - AI based Todo List application !</h1>\r\n      <div class=\"row justify-content-center\">\r\n        <div class=\"col-md-6\">\r\n          <p class=\"text-center\">Logged as {{ user.email }}</p>\r\n          <p class=\"text-center\">Todolists -> {{ todolists }}</p>\r\n          <p class=\"text-center\">Tasks -> {{ tasks }}</p>\r\n        </div>\r\n      </div>\r\n    </section>\r\n    <section>\r\n      <div class=\"d-grid gap-3\">\r\n        <ToDoListCreatorComponent v-on:create-to-do-list=\"createTodolist\"/>\r\n        <div>\r\n          <TodoListComponent v-for=\"(todolist) in todolists\"\r\n                             :key=\"todolist.idTodolist\"\r\n                             :id=\"todolist.idTodolist\"\r\n                             :todolists=\"todolists\"\r\n                             :isEditing=\"false\"\r\n                             :showTasks=\"false\"\r\n                             :user=\"user\"\r\n                             :tasks=\"tasks\"\r\n                             v-on:remove-to-do-list=\"deleteTodolist\"\r\n                             v-on:update-to-do-list=\"updateTodolist\"\r\n                             v-on:create-task=\"createTask\"\r\n                             v-on:delete-task=\"deleteTask\"\r\n                             v-on:update-task=\"updateTask\"/>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  </main>\r\n  <div v-else>{{ this.$router.push({ name: 'login' }) }}</div>\r\n</template>\r\n\r\n<script>\r\nimport TodoListComponent from '@/components/TodoListComponent.vue'\r\nimport TodolistDataService from '@/services/TodolistDataService'\r\nimport ToDoListCreatorComponent from '@/components/ToDoListCreatorComponent'\r\nimport TaskDataService from '@/services/TaskDataService'\r\n\r\nexport default {\r\n  components: { ToDoListCreatorComponent, TodoListComponent },\r\n  name: 'HomePage',\r\n  props: ['user', 'todolists', 'tasks'],\r\n  methods: {\r\n    deleteTodolist (id) {\r\n      TodolistDataService.delete(Number(id)).then(response => {\r\n        TodolistDataService.getAllOfUser(this.user.idUser).then(response => {\r\n          this.$store.dispatch('todolists', response.data.todolists)\r\n        })\r\n      })\r\n    },\r\n    updateTodolist (todolist) {\r\n      todolist.lastModifiedDate = new Date()\r\n      TodolistDataService.update(Number(todolist.idTodolist), todolist).then(response => {\r\n        console.log(response)\r\n      })\r\n    },\r\n    createTodolist (todolist) {\r\n      todolist.idUser = this.user.idUser\r\n      TodolistDataService.create(todolist).then(response => {\r\n        TodolistDataService.getAllOfUser(this.user.idUser).then(response => {\r\n          this.$store.dispatch('todolists', response.data.todolists)\r\n        })\r\n        console.log(response)\r\n      })\r\n    },\r\n    createTask (task) {\r\n      TaskDataService.create(task).then(response => {\r\n        TaskDataService.getAllOfTodolist(task.idTodolist).then(response => {\r\n          this.$store.dispatch('tasks', {\r\n            tasks: response.data.tasks,\r\n            idTodolist: task.idTodolist\r\n          })\r\n        })\r\n      })\r\n    },\r\n    deleteTask (task) {\r\n      TaskDataService.delete(Number(task.idTask)).then(response => {\r\n        TaskDataService.getAllOfTodolist(task.idTodolist).then(response => {\r\n          this.$store.dispatch('tasks', {\r\n            tasks: response.data.tasks,\r\n            idTodolist: task.idTodolist\r\n          })\r\n        })\r\n      })\r\n    },\r\n    updateTask (task) {\r\n      TaskDataService.update({ id: Number(task.idTodolist), task: task }).then(response => {})\r\n    }\r\n  }\r\n}\r\n</script>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}