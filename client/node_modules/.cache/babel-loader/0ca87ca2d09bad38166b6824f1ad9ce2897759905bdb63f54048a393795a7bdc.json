{"ast":null,"code":"import TodolistDataService from '@/services/TodolistDataService';\nexport default {\n  props: ['user', 'todolists', 'id', 'isEditing', 'showTasks'],\n  data() {\n    return {\n      todolist: this.todolists.find(item => item.idTodolist === this.id),\n      localIsEditing: this.isEditing,\n      localShowTasks: this.showTasks\n    };\n  },\n  created() {\n    console.log(this.todolists.find(item => item.idTodolist === this.id));\n  },\n  methods: {\n    deleteTodolist() {\n      TodolistDataService.delete(Number(this.id)).then(response => {\n        TodolistDataService.getAllOfUser(this.user.idUser).then(response => {\n          this.$store.dispatch('todolists', response.data.todolists);\n        });\n      });\n    },\n    updateTodolist() {\n      this.todolist.lastModifiedDate = new Date();\n      TodolistDataService.update(Number(this.id), this.todolist).then(response => {\n        console.log(response);\n      });\n    },\n    addTask(newTask) {\n      /* TODO\r\n      this.localTodolist.tasks.push(newTask)\r\n      this.updateTodolist() */\n    },\n    updateTask(updatedTask) {\n      /* TODO\r\n      const idx = this.localTodolist.tasks.findIndex(item => item.id === updatedTask.id)\r\n      this.localTodolist.tasks[idx] = updatedTask\r\n      this.updateTodolist() */\n    },\n    removeTask(taskToRemove) {\n      /* TODO\r\n      const idx = this.localTodolist.tasks.findIndex(item => item.id === taskToRemove.id)\r\n      if (idx !== -1) {\r\n        this.localTodolist.tasks.splice(idx, 1)\r\n      }\r\n      this.updateTodolist() */\n    },\n    toggleEdit() {\n      this.localIsEditing = !this.localIsEditing;\n      if (!this.localIsEditing) {\n        this.updateTodolist();\n      }\n    },\n    toggleTasks() {\n      this.localShowTasks = !this.localShowTasks;\n    }\n  }\n};","map":{"version":3,"names":["TodolistDataService","props","data","todolist","todolists","find","item","idTodolist","id","localIsEditing","isEditing","localShowTasks","showTasks","created","console","log","methods","deleteTodolist","delete","Number","then","response","getAllOfUser","user","idUser","$store","dispatch","updateTodolist","lastModifiedDate","Date","update","addTask","newTask","updateTask","updatedTask","removeTask","taskToRemove","toggleEdit","toggleTasks"],"sources":["C:\\Users\\natha\\Desktop\\todo_gpt\\client\\src\\components\\TodoListComponent.vue"],"sourcesContent":["<template>\r\n  <div class=\"mb-3\">\r\n    <div class=\"card text-center\">\r\n      <div class=\"card-header text-muted\">{{ todolist.lastModifiedDate }}</div>\r\n      <div class=\"card-body\">\r\n        <div>\r\n          <h5 class=\"card-title\" v-if=\"!localIsEditing\">{{ todolist.title }}</h5>\r\n          <input type=\"text\" class=\"form-control text-center\" v-if=\"localIsEditing\" v-model=\"todolist.title\">\r\n        </div>\r\n        <div>\r\n          <p class=\"card-text lh-base\" style=\"white-space: pre-line;\" v-if=\"!localIsEditing\">{{ todolist.description }}</p>\r\n          <textarea class=\"form-control text-center\" v-if=\"localIsEditing\" v-model=\"todolist.description\"></textarea>\r\n        </div>\r\n        <br>\r\n        <div class=\"progress\">\r\n          <!--\r\n          <div class=\"progress-bar\" role=\"progressbar\" :style=\"'width: ' + localTodolist.tasks.filter(item => item.priority === 2 && item.isFinished === true).length * 100 / localTodolist.tasks.length + '%; background-color: darkred'\"></div>\r\n          <div class=\"progress-bar\" role=\"progressbar\" :style=\"'width: ' + localTodolist.tasks.filter(item => item.priority === 1 && item.isFinished === true).length * 100 / localTodolist.tasks.length + '%; background-color: darkorange'\"></div>\r\n          <div class=\"progress-bar\" role=\"progressbar\" :style=\"'width: ' + localTodolist.tasks.filter(item => item.priority === 0 && item.isFinished === true).length * 100 / localTodolist.tasks.length + '%; background-color: forestgreen'\"></div>\r\n          -->\r\n        </div>\r\n        <br>\r\n        <br>\r\n        <div class=\"btn-group\" role=\"group\" >\r\n          <input type=\"checkbox\" class=\"btn-check\" :id=\"'toggleTasks' + todolist.idTodolist\"  autocomplete=\"off\" @click=\"toggleTasks\">\r\n          <label class=\"btn btn-primary\" :for=\"'toggleTasks' + todolist.idTodolist\">{{ localShowTasks ? 'Hide tasks' : 'Show tasks' }}</label><br>\r\n          <input type=\"checkbox\" class=\"btn-check\" :id=\"'toggleEditing' + todolist.idTodolist\" autocomplete=\"off\" @click=\"toggleEdit\">\r\n          <label class=\"btn btn-warning\" :for=\"'toggleEditing' + todolist.idTodolist\">{{ localIsEditing ? 'Save' : 'Modify' }}</label><br>\r\n          <button class=\"btn btn-danger\" @click.stop=\"deleteTodolist\">Delete</button>\r\n        </div>\r\n        <div v-if=\"localShowTasks\" class=\"text-start\">\r\n          <hr>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport TodolistDataService from '@/services/TodolistDataService'\r\n\r\nexport default {\r\n  props: ['user', 'todolists', 'id', 'isEditing', 'showTasks'],\r\n  data () {\r\n    return {\r\n      todolist: this.todolists.find(item => item.idTodolist === this.id),\r\n      localIsEditing: this.isEditing,\r\n      localShowTasks: this.showTasks\r\n    }\r\n  },\r\n  created () {\r\n    console.log(this.todolists.find(item => item.idTodolist === this.id))\r\n  },\r\n  methods: {\r\n    deleteTodolist () {\r\n      TodolistDataService.delete(Number(this.id)).then(response => {\r\n        TodolistDataService.getAllOfUser(this.user.idUser).then(response => {\r\n          this.$store.dispatch('todolists', response.data.todolists)\r\n        })\r\n      })\r\n    },\r\n    updateTodolist () {\r\n      this.todolist.lastModifiedDate = new Date()\r\n      TodolistDataService.update(Number(this.id), this.todolist).then(response => {\r\n        console.log(response)\r\n      })\r\n    },\r\n    addTask (newTask) {\r\n      /* TODO\r\n      this.localTodolist.tasks.push(newTask)\r\n      this.updateTodolist() */\r\n    },\r\n    updateTask (updatedTask) {\r\n      /* TODO\r\n      const idx = this.localTodolist.tasks.findIndex(item => item.id === updatedTask.id)\r\n      this.localTodolist.tasks[idx] = updatedTask\r\n      this.updateTodolist() */\r\n    },\r\n    removeTask (taskToRemove) {\r\n      /* TODO\r\n      const idx = this.localTodolist.tasks.findIndex(item => item.id === taskToRemove.id)\r\n      if (idx !== -1) {\r\n        this.localTodolist.tasks.splice(idx, 1)\r\n      }\r\n      this.updateTodolist() */\r\n    },\r\n    toggleEdit () {\r\n      this.localIsEditing = !this.localIsEditing\r\n      if (!this.localIsEditing) {\r\n        this.updateTodolist()\r\n      }\r\n    },\r\n    toggleTasks () {\r\n      this.localShowTasks = !this.localShowTasks\r\n    }\r\n  }\r\n}\r\n</script>\r\n"],"mappings":"AAuCA,OAAOA,mBAAkB,MAAO,gCAA+B;AAE/D,eAAe;EACbC,KAAK,EAAE,CAAC,MAAM,EAAE,WAAW,EAAE,IAAI,EAAE,WAAW,EAAE,WAAW,CAAC;EAC5DC,IAAGA,CAAA,EAAK;IACN,OAAO;MACLC,QAAQ,EAAE,IAAI,CAACC,SAAS,CAACC,IAAI,CAACC,IAAG,IAAKA,IAAI,CAACC,UAAS,KAAM,IAAI,CAACC,EAAE,CAAC;MAClEC,cAAc,EAAE,IAAI,CAACC,SAAS;MAC9BC,cAAc,EAAE,IAAI,CAACC;IACvB;EACF,CAAC;EACDC,OAAMA,CAAA,EAAK;IACTC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACX,SAAS,CAACC,IAAI,CAACC,IAAG,IAAKA,IAAI,CAACC,UAAS,KAAM,IAAI,CAACC,EAAE,CAAC;EACtE,CAAC;EACDQ,OAAO,EAAE;IACPC,cAAaA,CAAA,EAAK;MAChBjB,mBAAmB,CAACkB,MAAM,CAACC,MAAM,CAAC,IAAI,CAACX,EAAE,CAAC,CAAC,CAACY,IAAI,CAACC,QAAO,IAAK;QAC3DrB,mBAAmB,CAACsB,YAAY,CAAC,IAAI,CAACC,IAAI,CAACC,MAAM,CAAC,CAACJ,IAAI,CAACC,QAAO,IAAK;UAClE,IAAI,CAACI,MAAM,CAACC,QAAQ,CAAC,WAAW,EAAEL,QAAQ,CAACnB,IAAI,CAACE,SAAS;QAC3D,CAAC;MACH,CAAC;IACH,CAAC;IACDuB,cAAaA,CAAA,EAAK;MAChB,IAAI,CAACxB,QAAQ,CAACyB,gBAAe,GAAI,IAAIC,IAAI,EAAC;MAC1C7B,mBAAmB,CAAC8B,MAAM,CAACX,MAAM,CAAC,IAAI,CAACX,EAAE,CAAC,EAAE,IAAI,CAACL,QAAQ,CAAC,CAACiB,IAAI,CAACC,QAAO,IAAK;QAC1EP,OAAO,CAACC,GAAG,CAACM,QAAQ;MACtB,CAAC;IACH,CAAC;IACDU,OAAMA,CAAGC,OAAO,EAAE;MAChB;;;IAAA,CAGD;IACDC,UAASA,CAAGC,WAAW,EAAE;MACvB;;;;IAAA,CAID;IACDC,UAASA,CAAGC,YAAY,EAAE;MACxB;;;;;;IAAA,CAMD;IACDC,UAASA,CAAA,EAAK;MACZ,IAAI,CAAC5B,cAAa,GAAI,CAAC,IAAI,CAACA,cAAa;MACzC,IAAI,CAAC,IAAI,CAACA,cAAc,EAAE;QACxB,IAAI,CAACkB,cAAc,EAAC;MACtB;IACF,CAAC;IACDW,WAAUA,CAAA,EAAK;MACb,IAAI,CAAC3B,cAAa,GAAI,CAAC,IAAI,CAACA,cAAa;IAC3C;EACF;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}