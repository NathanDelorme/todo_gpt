{"ast":null,"code":"import { createStore } from 'vuex';\nexport default createStore({\n  state: {\n    user: null,\n    todolists: [],\n    tasks: []\n  },\n  getters: {\n    user: state => {\n      return state.user;\n    },\n    todolists: state => {\n      return state.todolists;\n    },\n    tasks: state => {\n      return state.tasks;\n    }\n  },\n  actions: {\n    user(context, user) {\n      context.commit('user', user);\n    },\n    todolists(context, todolists) {\n      context.commit('todolists', todolists);\n    },\n    tasks(context, data) {\n      console.log(data.tasks);\n      console.log(data.todolistId);\n      context.commit('tasks', {\n        data\n      });\n    }\n  },\n  mutations: {\n    user(state, user) {\n      state.user = user;\n    },\n    todolists(state, todolists) {\n      state.todolists = todolists;\n    },\n    tasks(state, data) {\n      state.tasks[data.todolistId] = data.tasks;\n    }\n  }\n});","map":{"version":3,"names":["createStore","state","user","todolists","tasks","getters","actions","context","commit","data","console","log","todolistId","mutations"],"sources":["C:/Users/natha/Desktop/todo_gpt/client/src/vuex.js"],"sourcesContent":["import { createStore } from 'vuex'\r\n\r\nexport default createStore({\r\n  state: {\r\n    user: null,\r\n    todolists: [],\r\n    tasks: []\r\n  },\r\n  getters: {\r\n    user: (state) => {\r\n      return state.user\r\n    },\r\n    todolists: (state) => {\r\n      return state.todolists\r\n    },\r\n    tasks: (state) => {\r\n      return state.tasks\r\n    }\r\n  },\r\n  actions: {\r\n    user (context, user) {\r\n      context.commit('user', user)\r\n    },\r\n    todolists (context, todolists) {\r\n      context.commit('todolists', todolists)\r\n    },\r\n    tasks (context, data) {\r\n      console.log(data.tasks)\r\n      console.log(data.todolistId)\r\n      context.commit('tasks', { data })\r\n    }\r\n  },\r\n  mutations: {\r\n    user (state, user) {\r\n      state.user = user\r\n    },\r\n    todolists (state, todolists) {\r\n      state.todolists = todolists\r\n    },\r\n    tasks (state, data) {\r\n      state.tasks[data.todolistId] = data.tasks\r\n    }\r\n  }\r\n})\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,MAAM;AAElC,eAAeA,WAAW,CAAC;EACzBC,KAAK,EAAE;IACLC,IAAI,EAAE,IAAI;IACVC,SAAS,EAAE,EAAE;IACbC,KAAK,EAAE;EACT,CAAC;EACDC,OAAO,EAAE;IACPH,IAAI,EAAGD,KAAK,IAAK;MACf,OAAOA,KAAK,CAACC,IAAI;IACnB,CAAC;IACDC,SAAS,EAAGF,KAAK,IAAK;MACpB,OAAOA,KAAK,CAACE,SAAS;IACxB,CAAC;IACDC,KAAK,EAAGH,KAAK,IAAK;MAChB,OAAOA,KAAK,CAACG,KAAK;IACpB;EACF,CAAC;EACDE,OAAO,EAAE;IACPJ,IAAIA,CAAEK,OAAO,EAAEL,IAAI,EAAE;MACnBK,OAAO,CAACC,MAAM,CAAC,MAAM,EAAEN,IAAI,CAAC;IAC9B,CAAC;IACDC,SAASA,CAAEI,OAAO,EAAEJ,SAAS,EAAE;MAC7BI,OAAO,CAACC,MAAM,CAAC,WAAW,EAAEL,SAAS,CAAC;IACxC,CAAC;IACDC,KAAKA,CAAEG,OAAO,EAAEE,IAAI,EAAE;MACpBC,OAAO,CAACC,GAAG,CAACF,IAAI,CAACL,KAAK,CAAC;MACvBM,OAAO,CAACC,GAAG,CAACF,IAAI,CAACG,UAAU,CAAC;MAC5BL,OAAO,CAACC,MAAM,CAAC,OAAO,EAAE;QAAEC;MAAK,CAAC,CAAC;IACnC;EACF,CAAC;EACDI,SAAS,EAAE;IACTX,IAAIA,CAAED,KAAK,EAAEC,IAAI,EAAE;MACjBD,KAAK,CAACC,IAAI,GAAGA,IAAI;IACnB,CAAC;IACDC,SAASA,CAAEF,KAAK,EAAEE,SAAS,EAAE;MAC3BF,KAAK,CAACE,SAAS,GAAGA,SAAS;IAC7B,CAAC;IACDC,KAAKA,CAAEH,KAAK,EAAEQ,IAAI,EAAE;MAClBR,KAAK,CAACG,KAAK,CAACK,IAAI,CAACG,UAAU,CAAC,GAAGH,IAAI,CAACL,KAAK;IAC3C;EACF;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}