{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, withModifiers as _withModifiers, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, Fragment as _Fragment } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"h2\", {\n  class: \"text-center mb-4\"\n}, \"Register\", -1 /* HOISTED */);\nconst _hoisted_2 = {\n  class: \"row justify-content-center\"\n};\nconst _hoisted_3 = {\n  class: \"col-md-6\"\n};\nconst _hoisted_4 = {\n  class: \"mb-3\"\n};\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"email\",\n  class: \"form-label\"\n}, \"Email address\", -1 /* HOISTED */);\nconst _hoisted_6 = {\n  class: \"mb-3\"\n};\nconst _hoisted_7 = /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"emailVerify\",\n  class: \"form-label\"\n}, \"Verify Email address\", -1 /* HOISTED */);\nconst _hoisted_8 = {\n  key: 0,\n  class: \"text-danger\"\n};\nconst _hoisted_9 = {\n  class: \"mb-3\"\n};\nconst _hoisted_10 = /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"password\",\n  class: \"form-label\"\n}, \"Password\", -1 /* HOISTED */);\nconst _hoisted_11 = {\n  class: \"mb-3\"\n};\nconst _hoisted_12 = /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"passwordVerify\",\n  class: \"form-label\"\n}, \"Verify Password\", -1 /* HOISTED */);\nconst _hoisted_13 = {\n  key: 0,\n  class: \"text-danger\"\n};\nconst _hoisted_14 = {\n  class: \"d-grid\"\n};\nconst _hoisted_15 = /*#__PURE__*/_createElementVNode(\"button\", {\n  type: \"submit\",\n  class: \"btn btn-primary\"\n}, \"Register\", -1 /* HOISTED */);\nconst _hoisted_16 = {\n  key: 0,\n  class: \"text-danger\"\n};\nconst _hoisted_17 = {\n  key: 1,\n  class: \"text-success\"\n};\nconst _hoisted_18 = {\n  class: \"text-center mt-3\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_router_link = _resolveComponent(\"router-link\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_hoisted_1, _createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"form\", {\n    onSubmit: _cache[4] || (_cache[4] = _withModifiers((...args) => $options.submitForm && $options.submitForm(...args), [\"prevent\"]))\n  }, [_createElementVNode(\"div\", _hoisted_4, [_hoisted_5, _withDirectives(_createElementVNode(\"input\", {\n    type: \"email\",\n    class: \"form-control\",\n    id: \"email\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.user.email = $event),\n    placeholder: \"name@example.com\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.user.email]])]), _createElementVNode(\"div\", _hoisted_6, [_hoisted_7, _withDirectives(_createElementVNode(\"input\", {\n    type: \"email\",\n    class: \"form-control\",\n    id: \"emailVerify\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.emailVerify = $event),\n    placeholder: \"name@example.com\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.emailVerify]]), $data.emailMessageEnable ? (_openBlock(), _createElementBlock(\"div\", _hoisted_8, \"Mail address should be the same\")) : _createCommentVNode(\"v-if\", true)]), _createElementVNode(\"div\", _hoisted_9, [_hoisted_10, _withDirectives(_createElementVNode(\"input\", {\n    type: \"password\",\n    class: \"form-control\",\n    id: \"password\",\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.user.password = $event),\n    placeholder: \"enter your password\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.user.password]])]), _createElementVNode(\"div\", _hoisted_11, [_hoisted_12, _withDirectives(_createElementVNode(\"input\", {\n    type: \"password\",\n    class: \"form-control\",\n    id: \"passwordVerify\",\n    \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $data.passwordVerify = $event),\n    placeholder: \"enter your password\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.passwordVerify]]), $data.passwordMessageEnable ? (_openBlock(), _createElementBlock(\"div\", _hoisted_13, \"Passwords should be the same\")) : _createCommentVNode(\"v-if\", true)]), _createElementVNode(\"div\", _hoisted_14, [_hoisted_15, $data.errorOccurs ? (_openBlock(), _createElementBlock(\"div\", _hoisted_16, _toDisplayString($data.errorMessage), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true), $data.success ? (_openBlock(), _createElementBlock(\"div\", _hoisted_17, \"Your account has been created. You can login.\")) : _createCommentVNode(\"v-if\", true)])], 32 /* HYDRATE_EVENTS */), _createElementVNode(\"div\", _hoisted_18, [_createElementVNode(\"p\", null, [_createTextVNode(\"Already have an account? \"), _createVNode(_component_router_link, {\n    to: \"/login\"\n  }, {\n    default: _withCtx(() => [_createTextVNode(\"Login here\")]),\n    _: 1 /* STABLE */\n  })])])])])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["_createElementVNode","class","for","type","_hoisted_1","_hoisted_2","_hoisted_3","onSubmit","_cache","_withModifiers","args","$options","submitForm","_hoisted_4","_hoisted_5","id","$data","user","email","$event","placeholder","_hoisted_6","_hoisted_7","emailVerify","emailMessageEnable","_createElementBlock","_hoisted_8","_hoisted_9","_hoisted_10","password","_hoisted_11","_hoisted_12","passwordVerify","passwordMessageEnable","_hoisted_13","_hoisted_14","_hoisted_15","errorOccurs","_hoisted_16","_toDisplayString","errorMessage","success","_hoisted_17","_hoisted_18","_createVNode","_component_router_link","to"],"sources":["C:\\Users\\natha\\Desktop\\todo_gpt\\client\\src\\views\\RegisterPage.vue"],"sourcesContent":["<template>\r\n  <h2 class=\"text-center mb-4\">Register</h2>\r\n  <div class=\"row justify-content-center\">\r\n    <div class=\"col-md-6\">\r\n      <form @submit.prevent=\"submitForm\">\r\n        <div class=\"mb-3\">\r\n          <label for=\"email\" class=\"form-label\">Email address</label>\r\n          <input type=\"email\" class=\"form-control\" id=\"email\" v-model=\"user.email\" placeholder=\"name@example.com\" >\r\n        </div>\r\n        <div class=\"mb-3\">\r\n          <label for=\"emailVerify\" class=\"form-label\" >Verify Email address</label>\r\n          <input type=\"email\" class=\"form-control\" id=\"emailVerify\" v-model=\"emailVerify\" placeholder=\"name@example.com\" >\r\n          <div v-if=\"emailMessageEnable\" class=\"text-danger\">Mail address should be the same</div>\r\n        </div>\r\n        <div class=\"mb-3\">\r\n          <label for=\"password\" class=\"form-label\">Password</label>\r\n          <input type=\"password\" class=\"form-control\" id=\"password\" v-model=\"user.password\" placeholder=\"enter your password\" >\r\n        </div>\r\n        <div class=\"mb-3\">\r\n          <label for=\"passwordVerify\" class=\"form-label\">Verify Password</label>\r\n          <input type=\"password\" class=\"form-control\" id=\"passwordVerify\" v-model=\"passwordVerify\" placeholder=\"enter your password\" >\r\n          <div v-if=\"passwordMessageEnable\" class=\"text-danger\">Passwords should be the same</div>\r\n        </div>\r\n        <div class=\"d-grid\">\r\n          <button type=\"submit\" class=\"btn btn-primary\">Register</button>\r\n          <div v-if=\"errorOccurs\" class=\"text-danger\">{{ errorMessage }}</div>\r\n          <div v-if=\"success\" class=\"text-success\">Your account has been created. You can login.</div>\r\n        </div>\r\n      </form>\r\n      <div class=\"text-center mt-3\">\r\n        <p>Already have an account? <router-link to=\"/login\">Login here</router-link></p>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport UserDataService from '@/services/UserDataService'\r\n\r\nexport default {\r\n  name: 'RegisterPage',\r\n  data () {\r\n    return {\r\n      user: {\r\n        email: '',\r\n        password: ''\r\n      },\r\n      emailVerify: '',\r\n      emailMessageEnable: false,\r\n      passwordVerify: '',\r\n      passwordMessageEnable: false,\r\n      errorOccurs: false,\r\n      errorMessage: '',\r\n      success: false\r\n    }\r\n  },\r\n  methods: {\r\n    submitForm () {\r\n      this.emailMessageEnable = false\r\n      this.passwordMessageEnable = false\r\n      this.mailAlreadyUsed = false\r\n      this.success = false\r\n      if (this.user.email !== this.emailVerify) {\r\n        this.emailMessageEnable = true\r\n        return\r\n      }\r\n      if (this.user.password !== this.passwordVerify) {\r\n        this.passwordMessageEnable = true\r\n        return\r\n      }\r\n\r\n      UserDataService.create(this.user).then(response => {\r\n        this.$router.push({ name: 'login' })\r\n      }).catch(error => {\r\n        console.log(error)\r\n        console.log(error.response.data.message)\r\n        this.message = error.response.data.message\r\n      })\r\n    }\r\n  },\r\n  created () {\r\n    document.title = 'Todo GPT - Register'\r\n  }\r\n}\r\n</script>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}