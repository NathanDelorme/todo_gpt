{"ast":null,"code":"import { vModelCheckbox as _vModelCheckbox, createElementVNode as _createElementVNode, withDirectives as _withDirectives, toDisplayString as _toDisplayString, normalizeClass as _normalizeClass, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, vModelText as _vModelText, withKeys as _withKeys, vModelSelect as _vModelSelect } from \"vue\";\nconst _hoisted_1 = {\n  class: \"list-group-item\"\n};\nconst _hoisted_2 = {\n  class: \"d-flex align-items-center justify-content-between\"\n};\nconst _hoisted_3 = {\n  class: \"form-check\"\n};\nconst _hoisted_4 = [\"disabled\"];\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"option\", {\n  value: \"2\"\n}, \"Urgent\", -1 /* HOISTED */);\nconst _hoisted_6 = /*#__PURE__*/_createElementVNode(\"option\", {\n  value: \"1\"\n}, \"Important\", -1 /* HOISTED */);\nconst _hoisted_7 = /*#__PURE__*/_createElementVNode(\"option\", {\n  value: \"0\"\n}, \"Not important\", -1 /* HOISTED */);\nconst _hoisted_8 = [_hoisted_5, _hoisted_6, _hoisted_7];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"li\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_withDirectives(_createElementVNode(\"input\", {\n    class: \"form-check-input\",\n    type: \"checkbox\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.task.isFinished = $event),\n    onChange: _cache[1] || (_cache[1] = (...args) => $options.updateTask && $options.updateTask(...args))\n  }, null, 544 /* HYDRATE_EVENTS, NEED_PATCH */), [[_vModelCheckbox, $data.task.isFinished]]), !this.localIsEditing ? (_openBlock(), _createElementBlock(\"label\", {\n    key: 0,\n    class: _normalizeClass([\"form-check-label\", {\n      'text-decoration-line-through': $data.task.isFinished\n    }])\n  }, _toDisplayString($data.task.title), 3 /* TEXT, CLASS */)) : _createCommentVNode(\"v-if\", true), this.localIsEditing ? _withDirectives((_openBlock(), _createElementBlock(\"input\", {\n    key: 1,\n    type: \"text\",\n    class: \"form-control\",\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.task.title = $event),\n    onKeyup: _cache[3] || (_cache[3] = _withKeys($event => this.localIsEditing = false, [\"enter\"]))\n  }, null, 544 /* HYDRATE_EVENTS, NEED_PATCH */)), [[_vModelText, $data.task.title]]) : _createCommentVNode(\"v-if\", true)]), _createElementVNode(\"div\", null, [_withDirectives(_createElementVNode(\"select\", {\n    class: \"form-select form-select-sm\",\n    \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => $data.task.priority = $event),\n    disabled: !this.localIsEditing,\n    onChange: _cache[5] || (_cache[5] = (...args) => $options.updateTask && $options.updateTask(...args))\n  }, _hoisted_8, 40 /* PROPS, HYDRATE_EVENTS */, _hoisted_4), [[_vModelSelect, $data.task.priority, void 0, {\n    number: true\n  }]]), _createElementVNode(\"button\", {\n    type: \"button\",\n    class: \"btn btn-primary\",\n    onClick: _cache[6] || (_cache[6] = (...args) => $options.toggleEditing && $options.toggleEditing(...args))\n  }, _toDisplayString(this.localIsEditing ? 'Save' : 'Modify'), 1 /* TEXT */), _createElementVNode(\"button\", {\n    type: \"button\",\n    class: \"btn btn-danger\",\n    onClick: _cache[7] || (_cache[7] = (...args) => $options.deleteTask && $options.deleteTask(...args))\n  }, \"Remove\")])])]);\n}","map":{"version":3,"names":["class","_createElementVNode","value","_hoisted_5","_hoisted_6","_hoisted_7","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","type","$data","task","isFinished","$event","onChange","_cache","args","$options","updateTask","localIsEditing","_normalizeClass","title","onKeyup","_withKeys","priority","disabled","onClick","toggleEditing","deleteTask"],"sources":["C:\\Users\\natha\\Desktop\\todo_gpt\\client\\src\\components\\TaskComponent.vue"],"sourcesContent":["<template>\r\n  <li class=\"list-group-item\">\r\n    <div class=\"d-flex align-items-center justify-content-between\">\r\n      <div class=\"form-check\">\r\n        <input class=\"form-check-input\" type=\"checkbox\" v-model=\"task.isFinished\" @change=\"updateTask\">\r\n        <label class=\"form-check-label\" v-bind:class=\"{'text-decoration-line-through': task.isFinished}\" v-if=\"!this.localIsEditing\">{{ task.title }}</label>\r\n        <input type=\"text\" class=\"form-control\" v-model=\"task.title\" v-if=\"this.localIsEditing\" v-on:keyup.enter=\"this.localIsEditing = false\">\r\n      </div>\r\n      <div>\r\n        <select class=\"form-select form-select-sm\" v-model.number=\"task.priority\" v-bind:disabled=\"!this.localIsEditing\" @change=\"updateTask\">\r\n          <option value=\"2\">Urgent</option>\r\n          <option value=\"1\">Important</option>\r\n          <option value=\"0\">Not important</option>\r\n        </select>\r\n        <button type=\"button\" class=\"btn btn-primary\" v-on:click=\"toggleEditing\">{{ this.localIsEditing ? 'Save' : 'Modify' }}</button>\r\n        <button type=\"button\" class=\"btn btn-danger\" v-on:click=\"deleteTask\">Remove</button>\r\n      </div>\r\n    </div>\r\n  </li>\r\n</template>\r\n\r\n<script>\r\nimport TaskDataService from '@/services/TaskDataService'\r\n\r\nexport default {\r\n  name: 'TaskComponent',\r\n  props: ['user', 'todolists', 'tasks', 'todolistId', 'id', 'isEditing'],\r\n  data () {\r\n    return {\r\n      task: this.tasks[this.todolistId].find(item => item.idTask === this.id),\r\n      localIsEditing: false\r\n    }\r\n  },\r\n  created () {\r\n  },\r\n  methods: {\r\n    toggleEditing () {\r\n      this.localIsEditing = !this.localIsEditing\r\n      if (!this.localIsEditing) {\r\n        this.updateTask()\r\n      }\r\n    },\r\n    updateTask () {\r\n      TaskDataService.update({ id: Number(this.id), task: this.task}).then(response => {})\r\n    },\r\n    deleteTask () {\r\n      this.$emit('delete-task', this.newTask)\r\n      TaskDataService.delete(Number(this.id)).then(response => {\r\n        TaskDataService.getAllOfTodolist(this.todolistId).then(response => {\r\n          this.$store.dispatch('tasks', {\r\n            tasks: response.data.tasks,\r\n            idTodolist: this.todolistId\r\n          })\r\n        })\r\n      })\r\n    }\r\n  }\r\n}\r\n</script>\r\n"],"mappings":";;EACMA,KAAK,EAAC;AAAiB;;EACpBA,KAAK,EAAC;AAAmD;;EACvDA,KAAK,EAAC;AAAY;;gCAOnBC,mBAAA,CAAiC;EAAzBC,KAAK,EAAC;AAAG,GAAC,QAAM;gCACxBD,mBAAA,CAAoC;EAA5BC,KAAK,EAAC;AAAG,GAAC,WAAS;gCAC3BD,mBAAA,CAAwC;EAAhCC,KAAK,EAAC;AAAG,GAAC,eAAa;oBAF/BC,UAAiC,EACjCC,UAAoC,EACpCC,UAAwC,C;;uBAXhDC,mBAAA,CAiBK,MAjBLC,UAiBK,GAhBHN,mBAAA,CAeM,OAfNO,UAeM,GAdJP,mBAAA,CAIM,OAJNQ,UAIM,G,gBAHJR,mBAAA,CAA+F;IAAxFD,KAAK,EAAC,kBAAkB;IAACU,IAAI,EAAC,UAAU;+DAAUC,KAAA,CAAAC,IAAI,CAACC,UAAU,GAAAC,MAAA;IAAGC,QAAM,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAC,UAAA,IAAAD,QAAA,CAAAC,UAAA,IAAAF,IAAA,CAAU;qEAApCN,KAAA,CAAAC,IAAI,CAACC,UAAU,E,SACqCO,cAAc,I,cAA3Hd,mBAAA,CAAqJ;;IAA9IN,KAAK,EAAAqB,eAAA,EAAC,kBAAkB;MAAA,gCAAgDV,KAAA,CAAAC,IAAI,CAACC;IAAU;sBAAkCF,KAAA,CAAAC,IAAI,CAACU,KAAK,2B,wCAClEF,cAAc,G,+BAAtFd,mBAAA,CAAuI;;IAAhII,IAAI,EAAC,MAAM;IAACV,KAAK,EAAC,cAAc;+DAAUW,KAAA,CAAAC,IAAI,CAACU,KAAK,GAAAR,MAAA;IAAkCS,OAAK,EAAAP,MAAA,QAAAA,MAAA,MAAAQ,SAAA,CAAAV,MAAA,SAAaM,cAAc;kEAA5ET,KAAA,CAAAC,IAAI,CAACU,KAAK,E,yCAE7DrB,mBAAA,CAQM,c,gBAPJA,mBAAA,CAIS;IAJDD,KAAK,EAAC,4BAA4B;+DAAiBW,KAAA,CAAAC,IAAI,CAACa,QAAQ,GAAAX,MAAA;IAASY,QAAQ,QAAQN,cAAc;IAAGL,QAAM,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAC,UAAA,IAAAD,QAAA,CAAAC,UAAA,IAAAF,IAAA,CAAU;+EAAzEN,KAAA,CAAAC,IAAI,CAACa,QAAQ,E;YAA7B;EAA8B,E,IAKzExB,mBAAA,CAA+H;IAAvHS,IAAI,EAAC,QAAQ;IAACV,KAAK,EAAC,iBAAiB;IAAM2B,OAAK,EAAAX,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAU,aAAA,IAAAV,QAAA,CAAAU,aAAA,IAAAX,IAAA,CAAa;2BAAUG,cAAc,sCAC/FnB,mBAAA,CAAoF;IAA5ES,IAAI,EAAC,QAAQ;IAACV,KAAK,EAAC,gBAAgB;IAAM2B,OAAK,EAAAX,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAW,UAAA,IAAAX,QAAA,CAAAW,UAAA,IAAAZ,IAAA,CAAU;KAAE,QAAM,E"},"metadata":{},"sourceType":"module","externalDependencies":[]}