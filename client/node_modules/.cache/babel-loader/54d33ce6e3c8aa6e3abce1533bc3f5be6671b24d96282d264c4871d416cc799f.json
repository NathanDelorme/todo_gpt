{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport UserDataService from '@/services/UserDataService';\nexport default {\n  name: 'RegisterPage',\n  data() {\n    return {\n      user: {\n        email: '',\n        password: ''\n      },\n      emailVerify: '',\n      emailMessageEnable: false,\n      passwordVerify: '',\n      passwordMessageEnable: false,\n      mailAlreadyUsed: false,\n      success: false\n    };\n  },\n  methods: {\n    submitForm() {\n      UserDataService.create().then(response => {\n        this.$router.push({\n          name: 'login'\n        });\n      }).catch(error => {\n        this.message = error.response.data.message;\n      });\n    }\n  },\n  created() {\n    document.title = 'Todo GPT - Register';\n  }\n};","map":{"version":3,"names":["UserDataService","name","data","user","email","password","emailVerify","emailMessageEnable","passwordVerify","passwordMessageEnable","mailAlreadyUsed","success","methods","submitForm","create","then","response","$router","push","catch","error","message","created","document","title"],"sources":["C:\\Users\\natha\\Desktop\\todo_gpt\\client\\src\\views\\RegisterPage.vue"],"sourcesContent":["<template>\r\n  <h2 class=\"text-center mb-4\">Register</h2>\r\n  <div class=\"row justify-content-center\">\r\n    <div class=\"col-md-6\">\r\n      <form @submit.prevent=\"submitForm\">\r\n        <div class=\"mb-3\">\r\n          <label for=\"email\" class=\"form-label\">Email address</label>\r\n          <input type=\"email\" class=\"form-control\" id=\"email\" v-model=\"user.email\" placeholder=\"name@example.com\" required>\r\n        </div>\r\n        <div class=\"mb-3\">\r\n          <label for=\"emailVerify\" class=\"form-label\" >Verify Email address</label>\r\n          <input type=\"email\" class=\"form-control\" id=\"emailVerify\" v-model=\"emailVerify\" placeholder=\"name@example.com\" required>\r\n          <div v-if=\"emailMessageEnable\" class=\"text-danger\">Mail address should be the same</div>\r\n        </div>\r\n        <div class=\"mb-3\">\r\n          <label for=\"password\" class=\"form-label\">Password</label>\r\n          <input type=\"password\" class=\"form-control\" id=\"password\" v-model=\"user.password\" placeholder=\"enter your password\" required>\r\n        </div>\r\n        <div class=\"mb-3\">\r\n          <label for=\"passwordVerify\" class=\"form-label\">Verify Password</label>\r\n          <input type=\"password\" class=\"form-control\" id=\"passwordVerify\" v-model=\"passwordVerify\" placeholder=\"enter your password\" required>\r\n          <div v-if=\"passwordMessageEnable\" class=\"text-danger\">Passwords should be the same</div>\r\n        </div>\r\n        <div class=\"d-grid\">\r\n          <button type=\"submit\" class=\"btn btn-primary\">Register</button>\r\n          <div v-if=\"mailAlreadyUsed\" class=\"text-danger\">This mail address is already used for an account</div>\r\n          <div v-if=\"success\" class=\"text-success\">Your account has been created. You can login.</div>\r\n        </div>\r\n      </form>\r\n      <div class=\"text-center mt-3\">\r\n        <p>Already have an account? <router-link to=\"/login\">Login here</router-link></p>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport UserDataService from '@/services/UserDataService'\r\n\r\nexport default {\r\n  name: 'RegisterPage',\r\n  data () {\r\n    return {\r\n      user: {\r\n        email: '',\r\n        password: ''\r\n      },\r\n      emailVerify: '',\r\n      emailMessageEnable: false,\r\n      passwordVerify: '',\r\n      passwordMessageEnable: false,\r\n      mailAlreadyUsed: false,\r\n      success: false\r\n    }\r\n  },\r\n  methods: {\r\n    submitForm () {\r\n      UserDataService.create().then(response => {\r\n        this.$router.push({ name: 'login' })\r\n      }).catch(error => {\r\n        this.message = error.response.data.message\r\n      })\r\n    }\r\n  },\r\n  created () {\r\n    document.title = 'Todo GPT - Register'\r\n  }\r\n}\r\n</script>\r\n"],"mappings":";AAqCA,OAAOA,eAAc,MAAO,4BAA2B;AAEvD,eAAe;EACbC,IAAI,EAAE,cAAc;EACpBC,IAAGA,CAAA,EAAK;IACN,OAAO;MACLC,IAAI,EAAE;QACJC,KAAK,EAAE,EAAE;QACTC,QAAQ,EAAE;MACZ,CAAC;MACDC,WAAW,EAAE,EAAE;MACfC,kBAAkB,EAAE,KAAK;MACzBC,cAAc,EAAE,EAAE;MAClBC,qBAAqB,EAAE,KAAK;MAC5BC,eAAe,EAAE,KAAK;MACtBC,OAAO,EAAE;IACX;EACF,CAAC;EACDC,OAAO,EAAE;IACPC,UAASA,CAAA,EAAK;MACZb,eAAe,CAACc,MAAM,EAAE,CAACC,IAAI,CAACC,QAAO,IAAK;QACxC,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC;UAAEjB,IAAI,EAAE;QAAQ,CAAC;MACrC,CAAC,CAAC,CAACkB,KAAK,CAACC,KAAI,IAAK;QAChB,IAAI,CAACC,OAAM,GAAID,KAAK,CAACJ,QAAQ,CAACd,IAAI,CAACmB,OAAM;MAC3C,CAAC;IACH;EACF,CAAC;EACDC,OAAMA,CAAA,EAAK;IACTC,QAAQ,CAACC,KAAI,GAAI,qBAAoB;EACvC;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}